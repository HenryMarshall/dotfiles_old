### SETTINGS ###

# Reduce tmux delay
set -sg escape-time 1


# Base 1 window/pane counter
set  -g base-index 1
setw -g pane-base-index 1

set  -g mouse on


# Colors
set  -g default-terminal "rxvt-unicode-256color"
set  -g pane-active-border-fg     red

setw -g window-status-current-bg  red
set  -g window-status-activity-fg black
set  -g window-status-activity-bg yellow


# Status Bar
set  -g status-left-length 25
set  -g status-left " [#S] "
set  -g status-right "[#h] "
setw -g monitor-activity on
set  -g visual-activity on




### BINDINGS ###

# Change Prefix from b to a.
set  -g prefix C-a
bind C-a send-prefix


# Unbind Existing Commands which Conflict
# The following send the same code with or without chording with Ctrl
unbind ,

# Copy Mode
setw -g mode-keys vi
bind C-c copy-mode
bind C-b list-buffers
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"


# Client/Session Management
bind C-q detach-client
bind C-y command-prompt -I '#S' "rename-session '%%'"
bind C-p choose-tree
bind C-i switch-client -l # Last session
bind C-d command-prompt "new -s '%%'"

# Window Management
bind C-t new-window -c '#{pane_current_path}'
bind C-e last-window
bind C-f command-prompt "find-window '%%'"
bind C-w confirm-before -p "kill-window #P? (y/n)" kill-window
bind C-u command-prompt -I '#W' "rename-window '%%'"
# The `-a` flag on `next-window` specifies window with bell
bind   , next-window -a


# Pane Management
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R
bind C-x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind C-s split-window -h -c '#{pane_current_path}'
bind C-r split-window -v -c '#{pane_current_path}'
bind C-n last-pane
# `C-m` appears as `Enter` in the help page
bind C-m display-panes
# Makes pane go fullscreen
bind C-g resize-pane -Z
bind Escape break-pane

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-n if-shell "$is_vim" "send-keys C-n" "select-pane -l"


# General
# `'` sends the same signal as `C-'`
bind "'" command-prompt
# `C-_` is actually `C-/`, but TTY is dumb sometimes
bind C-_ list-keys
# Convenient reloads
bind C-F5 source-file ~/.tmux.conf \; display "Reloaded!"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Plugin Config
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @resurrect-capture-pane-contents 'on'
# Only saves history for panes not currently running a process
set -g @resurrect-save-bash-history 'on'
# Requires tpope/vim-obsession vim plugin
set -g @resurrect-strategy-vim 'session'

# Automatic saving is off. Coninuum is used exclusively for restore
set -g @continuum-save-interval '0'
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (*MUST* be last line)
run '~/.tmux/plugins/tpm/tpm'
